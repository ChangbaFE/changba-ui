"use strict";(self["webpackChunkchangba_ui_docs"]=self["webpackChunkchangba_ui_docs"]||[]).push([[842],{842:function(t,a,e){e.r(a),e.d(a,{default:function(){return c}});var s=function(){var t=this,a=t._self._c;return a("doc-page-section",[a("p",[t._v("\n      用于表单数据的校验。\n    ")]),t._v(" "),a("h2",{staticClass:"doc-page-header"},[t._v("基础用法")]),t._v(" "),a("cb-tabs",[a("cb-tab-pane",{attrs:{label:"示例"}},[a("cb-form",{directives:[{name:"cb-validation",rawName:"v-cb-validation:main",arg:"main"}],attrs:{button:"提交"},on:{submit:t.handleSubmit}},[a("cb-form-group",{attrs:{label:"必填项："}},[a("cb-input",{attrs:{required:""},model:{value:t.test1,callback:function(a){t.test1=a},expression:"test1"}})],1)],1)],1),t._v(" "),a("cb-tab-pane",{attrs:{label:"代码"}},[a("doc-highlight",[a("textarea",[t._v('<cb-form @submit="handleSubmit" v-cb-validation>\n  <cb-form-group label="演示：">\n    <cb-input v-model="test1" required />\n  </cb-form-group>\n</cb-form>\n          ')])])],1)],1),t._v(" "),a("h2",{staticClass:"doc-page-header"},[t._v("多个表单验证的时候指定表单验证名称")]),t._v(" "),a("cb-tabs",[a("cb-tab-pane",{attrs:{label:"示例"}},[a("cb-form",{directives:[{name:"cb-validation",rawName:"v-cb-validation:test-validation",arg:"test-validation"}],attrs:{button:"提交"},on:{submit:t.handleSubmit}},[a("cb-form-group",{attrs:{label:"必填项："}},[a("cb-input",{attrs:{required:""},model:{value:t.test2,callback:function(a){t.test2=a},expression:"test2"}})],1)],1)],1),t._v(" "),a("cb-tab-pane",{attrs:{label:"代码"}},[a("doc-highlight",[a("textarea",[t._v('<cb-form button="提交" @submit="handleSubmit" v-cb-validation:test-validation>\n  <cb-form-group label="必填项：">\n    <cb-input v-model="test2" required />\n  </cb-form-group>\n</cb-form>\n          ')])])],1)],1),t._v(" "),a("h2",{staticClass:"doc-page-header"},[t._v("属性")]),t._v(" "),a("cb-box",{attrs:{"body-class":"table-responsive no-padding"}},[a("doc-table",{attrs:{data:t.prop},scopedSlots:t._u([{key:"default",fn:function({item:e}){return[a("td",[t._v(t._s(e.name))]),t._v(" "),a("td",[t._v(t._s(e.desc))]),t._v(" "),a("td",[t._v(t._s(e.type))]),t._v(" "),a("td",[t._v(t._s(e.value))]),t._v(" "),a("td",[t._v(t._s(e.default))])]}}])},[a("template",{slot:"header"},[a("th",{attrs:{width:"100"}},[t._v("参数")]),t._v(" "),a("th",[t._v("说明")]),t._v(" "),a("th",[t._v("类型")]),t._v(" "),a("th",[t._v("可选值")]),t._v(" "),a("th",[t._v("默认值")])])],2)],1)],1)},n=[],i={name:"DemoFormValidation",data(){return{test1:"",test2:"",prop:[{name:"v-cb-validation",desc:"在需要启用表单验证的 cb-form 组件上使用这个指令。如果表单校验失败，不会触发 submit 事件。如果页面有多个表单校验，可以给指令传递一个参数表示名称。单个表单验证对象实例可以通过 this.$cbValidator 获取，多个表单验证对象实例可以通过 this.$cbValidator[名称] 获取。输入项的具体验证规则，请参考 http://parsleyjs.org/doc/index.html#validators",type:"—",value:"—",default:"—"}]}},methods:{handleSubmit(){this.$cbNotify.success("你提交了表单~")}}},o=i,r=e(1001),l=(0,r.Z)(o,s,n,!1,null,null,null),c=l.exports}}]);